
Mink Routines Demo

Mink_PrintlnMV Demo
r = ( 3.000e+00,
   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,
   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,
   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,
  5.900e+01) 

Mink_PrintMV Demo
r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_OverBar Demo
r =              ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_OverBar(r) = ( 5.900e+01,  -5.300e+01, 4.700e+01,-4.300e+01, 4.100e+01,   3.700e+01,-3.100e+01, 2.900e+01,  2.300e+01,-1.900e+01, 1.700e+01,  -1.300e+01, 1.100e+01,-7.000e+00, 5.000e+00,  3.000e+00) 
Mink_Determinant is conserved
s = r*u =       ( 0.000e+00,  -1.380e+03,-2.372e+03,-1.604e+03, 0.000e+00,  -2.900e+03,-1.596e+03,-7.640e+02,  0.000e+00, 0.000e+00, 0.000e+00,   0.000e+00, 9.720e+02, 4.492e+03, 1.572e+04,  1.675e+04) 

Mink_UnderBar Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_UnderBar(r) = ( 5.900e+01,   5.300e+01,-4.700e+01, 4.300e+01,-4.100e+01,   3.700e+01,-3.100e+01, 2.900e+01,  2.300e+01,-1.900e+01, 1.700e+01,   1.300e+01,-1.100e+01, 7.000e+00,-5.000e+00,  3.000e+00) 
Mink_Determinant is conserved
s = r*u =        ( 0.000e+00,   0.000e+00, 0.000e+00, 0.000e+00,-1.716e+03,   2.300e+03, 4.276e+03, 1.146e+04,  0.000e+00, 0.000e+00, 0.000e+00,   1.214e+04, 0.000e+00, 0.000e+00, 0.000e+00, -1.072e+03) 
t = Mink_OverBar(Mink_UnderBar(r)) =        ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_Reverse Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Reverse(r) = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,  -1.700e+01,-1.900e+01,-2.300e+01, -2.900e+01,-3.100e+01,-3.700e+01,  -4.100e+01,-4.300e+01,-4.700e+01,-5.300e+01,  5.900e+01) 
Mink_Determinant is conserved
s = r*u =        (-1.062e+04,  -1.058e+04, 2.132e+03, 9.240e+02,-6.120e+02,   0.000e+00, 0.000e+00, 0.000e+00,  0.000e+00, 0.000e+00, 0.000e+00,   0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00, -8.120e+02) 
t = Mink_Reverse(Mink_Reverse(r)) =        ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_Parity Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Parity(r) = ( 3.000e+00,  -5.000e+00,-7.000e+00,-1.100e+01,-1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,  -4.100e+01,-4.300e+01,-4.700e+01,-5.300e+01,  5.900e+01) 
Mink_Determinant is conserved
s = r*u =        (-6.692e+03,  -6.156e+03, 6.016e+03,-3.600e+03,-3.300e+03,   4.684e+03,-1.748e+03, 4.528e+03, -9.040e+02, 3.164e+03,-2.996e+03,   4.876e+03, 4.184e+03,-3.192e+03, 2.932e+03,  1.768e+03) 
t = Mink_Parity(Mink_Parity(r)) =        ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_Transpose Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Transpose(r) = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01,-1.300e+01,  -1.700e+01,-1.900e+01,-2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,  -4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01, -5.900e+01) 
Mink_Determinant is conserved
s = r*u =        ( 1.675e+04,   1.572e+04,-4.492e+03, 9.720e+02, 0.000e+00,   0.000e+00, 0.000e+00, 0.000e+00, -7.640e+02, 1.596e+03,-2.900e+03,   0.000e+00, 1.604e+03,-2.372e+03, 1.380e+03,  0.000e+00) 
t = Mink_Transpose(Mink_Transpose(r)) =        ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_Conjugation Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Conjugation(r) = ( 3.000e+00,  -5.000e+00,-7.000e+00,-1.100e+01,-1.300e+01,  -1.700e+01,-1.900e+01,-2.300e+01, -2.900e+01,-3.100e+01,-3.700e+01,  -4.100e+01,-4.300e+01,-4.700e+01,-5.300e+01, -5.900e+01) 
Mink_Determinant is not conserved
s = r*u =        (-3.714e+03,  -4.258e+03,-2.986e+03, 7.406e+03, 5.686e+03,  -4.150e+03, 5.454e+03,-2.454e+03,  4.350e+03,-1.506e+03, 7.940e+02,  -3.380e+02,-3.460e+02,-2.260e+02,-4.340e+02, -1.414e+03) 
t = Mink_Conjugation(Mink_Conjugation(r)) =        ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_Clifford_Conjugation Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Clifford_Conjugation(r) = ( 3.000e+00,  -5.000e+00,-7.000e+00,-1.100e+01,-1.300e+01,  -1.700e+01,-1.900e+01,-2.300e+01, -2.900e+01,-3.100e+01,-3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
Mink_Determinant is conserved
s = r*u =        (-3.040e+02,   0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,   0.000e+00, 0.000e+00, 0.000e+00,  0.000e+00, 0.000e+00, 0.000e+00,  -1.900e+03,-1.676e+03, 1.596e+03,-1.868e+03, -1.308e+03) 
t = Mink_Clifford_Conjugation(Mink_Clifford_Conjugation(r)) =        ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

Mink_Dual Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Dual(r) = ( 5.900e+01,   5.300e+01,-4.700e+01, 4.300e+01, 4.100e+01,  -3.700e+01, 3.100e+01,-2.900e+01,  2.300e+01,-1.900e+01, 1.700e+01,  -1.300e+01,-1.100e+01, 7.000e+00,-5.000e+00, -3.000e+00) 
Mink_Determinant is conserved
s = r*u =        ( 1.768e+03,   7.520e+02,-5.080e+02, 6.040e+02, 5.840e+02,   5.720e+02, 1.692e+03, 4.176e+03,  2.592e+03, 5.340e+03, 4.252e+03,   5.608e+03, 7.340e+03, 3.028e+03,-4.288e+03, -3.732e+03) 
t = Mink_Dual(Mink_Dual(r)) =        (-3.000e+00,  -5.000e+00,-7.000e+00,-1.100e+01,-1.300e+01,  -1.700e+01,-1.900e+01,-2.300e+01, -2.900e+01,-3.100e+01,-3.700e+01,  -4.100e+01,-4.300e+01,-4.700e+01,-5.300e+01, -5.900e+01) 

Mink_Dorst_Dual Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Reverse(r) = ( 5.900e+01,   5.300e+01,-4.700e+01, 4.300e+01, 4.100e+01,  -3.700e+01, 3.100e+01,-2.900e+01,  2.300e+01,-1.900e+01, 1.700e+01,  -1.300e+01,-1.100e+01, 7.000e+00,-5.000e+00, -3.000e+00) 
Mink_Determinant is conserved
s = r*u =        ( 1.768e+03,   7.520e+02,-5.080e+02, 6.040e+02, 5.840e+02,   5.720e+02, 1.692e+03, 4.176e+03,  2.592e+03, 5.340e+03, 4.252e+03,   5.608e+03, 7.340e+03, 3.028e+03,-4.288e+03, -3.732e+03) 

Mink_Dorst_UnDual Demo
r =               ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Dorst_UnDual(r) = (-5.900e+01,  -5.300e+01, 4.700e+01,-4.300e+01,-4.100e+01,   3.700e+01,-3.100e+01, 2.900e+01, -2.300e+01, 1.900e+01,-1.700e+01,   1.300e+01, 1.100e+01,-7.000e+00, 5.000e+00,  3.000e+00) 
Mink_Determinant is conserved
s = r*u =        (-1.768e+03,  -7.520e+02, 5.080e+02,-6.040e+02,-5.840e+02,  -5.720e+02,-1.692e+03,-4.176e+03, -2.592e+03,-5.340e+03,-4.252e+03,  -5.608e+03,-7.340e+03,-3.028e+03, 4.288e+03,  3.732e+03) 
Mink_Dorst_UnDual(Mink_Dorst_Dual(r)) = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
Mink_Dorst_Dual(Mink_Dorst_UnDual(r)) = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 

  r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
  s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
r+s = ( 6.400e+01,   7.200e+01, 7.800e+01, 8.400e+01, 9.200e+01,   1.000e+02, 1.080e+02, 1.200e+02,  1.300e+02, 1.340e+02, 1.440e+02,   1.500e+02, 1.560e+02, 1.740e+02, 1.840e+02,  1.960e+02) 

  r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
  s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
r-s = (-5.800e+01,  -6.200e+01,-6.400e+01,-6.200e+01,-6.600e+01,  -6.600e+01,-7.000e+01,-7.400e+01, -7.200e+01,-7.200e+01,-7.000e+01,  -6.800e+01,-7.000e+01,-8.000e+01,-7.800e+01, -7.800e+01) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
t = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
r != s (as expected)
s == t (as expected)

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
t = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
r != s (as expected)
s == t (as expected)

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = r*s = ( 1.076e+04,   1.221e+04, 6.982e+03,-2.485e+04,-2.284e+04,   1.137e+04,-1.885e+04, 8.478e+03, -1.763e+04, 7.466e+03, 5.090e+03,   3.226e+03, 3.354e+03, 7.478e+03, 4.458e+03,  8.798e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = r/2 = ( 1.500e+00,   2.500e+00, 3.500e+00, 5.500e+00, 6.500e+00,   8.500e+00, 9.500e+00, 1.150e+01,  1.450e+01, 1.550e+01, 1.850e+01,   2.050e+01, 2.150e+01, 2.350e+01, 2.650e+01,  2.950e+01) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Wedge(r, s) = ( 1.830e+02,   5.060e+02, 6.400e+02, 8.900e+02, 1.030e+03,   1.172e+03, 1.054e+03, 1.424e+03,  1.596e+03, 1.830e+03, 2.498e+03,   5.036e+03, 5.210e+03, 5.692e+03, 6.684e+03,  8.798e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_AntiWedge(r, s) = ( 8.798e+03,   1.203e+04, 1.261e+04, 1.396e+04, 1.560e+04,   7.172e+03, 7.938e+03, 8.468e+03,  1.008e+04, 9.968e+03, 1.081e+04,   1.205e+04, 1.256e+04, 1.393e+04, 1.499e+04,  8.083e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Regressive(r, s) = ( 9.842e+03,   1.203e+04, 1.261e+04, 1.396e+04, 1.560e+04,   7.280e+03, 7.770e+03, 9.280e+03,  9.782e+03, 1.068e+04, 1.196e+04,   1.205e+04, 1.256e+04, 1.393e+04, 1.499e+04,  8.083e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Regressive_Via_Formula(r, s) = ( 9.842e+03,   1.203e+04, 1.261e+04, 1.396e+04, 1.560e+04,   7.280e+03, 7.770e+03, 9.280e+03,  9.782e+03, 1.068e+04, 1.196e+04,   1.205e+04, 1.256e+04, 1.393e+04, 1.499e+04,  8.083e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Lower_Right_Via_Formula(r, s) = (-8.083e+03,   4.680e+02,-1.054e+03, 7.760e+02, 8.140e+02,   1.081e+04,-9.968e+03, 1.008e+04, -8.468e+03, 7.938e+03,-7.172e+03,  -1.810e+03,-1.856e+03, 1.786e+03,-2.226e+03,  8.798e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Expander(r, s) = ( 0.000e+00,   0.000e+00, 0.000e+00, 0.000e+00, 0.000e+00,  -1.140e+02,-3.720e+02,-2.700e+02, -4.760e+02,-3.700e+02,-8.000e+01,   2.208e+03, 2.248e+03, 2.444e+03, 3.058e+03,  4.788e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Conserver(r, s) = ( 1.830e+02,   5.060e+02, 6.400e+02, 8.900e+02, 1.030e+03,   1.346e+03, 5.320e+02, 1.264e+03, -1.000e+01, 1.762e+03, 3.878e+03,   3.898e+03, 3.906e+03, 1.804e+03, 4.668e+03,  4.010e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Shrinker(r, s) = ( 1.058e+04,   1.170e+04, 6.342e+03,-2.574e+04,-2.387e+04,   1.013e+04,-1.901e+04, 7.484e+03, -1.714e+04, 6.074e+03, 1.292e+03,  -2.880e+03,-2.800e+03, 3.230e+03,-3.268e+03,  0.000e+00) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Symmetric(r, s) = ( 1.076e+04,   1.168e+04, 9.258e+03,-2.232e+04,-1.921e+04,   1.199e+04,-1.794e+04, 9.028e+03, -1.547e+04, 8.190e+03, 3.816e+03,   5.036e+03, 5.210e+03, 5.692e+03, 6.684e+03,  9.320e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_AntiSymmetric(r, s) = ( 0.000e+00,   5.240e+02,-2.276e+03,-2.538e+03,-3.628e+03,  -6.280e+02,-9.100e+02,-5.500e+02, -2.152e+03,-7.240e+02, 1.274e+03,  -1.810e+03,-1.856e+03, 1.786e+03,-2.226e+03, -5.220e+02) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Inner(r, s) = ( 1.058e+04,   1.170e+04, 6.342e+03,-2.574e+04,-2.387e+04,   1.071e+04,-1.936e+04, 7.334e+03, -1.755e+04, 5.990e+03, 1.238e+03,  -2.880e+03,-2.800e+03, 3.230e+03,-3.268e+03,  0.000e+00) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Left_Contraction(r, s) = ( 1.076e+04,  -1.612e+03, 1.098e+04,-1.275e+04,-1.032e+04,   5.048e+03,-6.394e+03, 3.106e+03, -5.036e+03, 2.036e+03,-4.560e+02,   2.108e+03, 1.846e+03,-5.780e+02, 1.078e+03,  4.110e+02) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
s = ( 6.100e+01,   6.700e+01, 7.100e+01, 7.300e+01, 7.900e+01,   8.300e+01, 8.900e+01, 9.700e+01,  1.010e+02, 1.030e+02, 1.070e+02,   1.090e+02, 1.130e+02, 1.270e+02, 1.310e+02,  1.370e+02) 
u = Mink_Right_Contraction(r, s) = ( 1.076e+04,   1.382e+04,-3.998e+03,-1.210e+04,-1.251e+04,   6.946e+03,-1.154e+04, 5.922e+03, -1.044e+04, 6.154e+03, 4.272e+03,  -2.160e+03,-1.684e+03, 7.056e+03,-7.200e+02,  3.599e+03) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Determinant(r) = -3.432e+06 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Adjugate(r) = (-5.992e+04,   9.320e+04, 1.012e+05, 8.991e+04, 1.036e+05,   1.300e+05, 4.738e+04,-1.636e+05,  5.719e+04,-1.580e+05, 4.137e+04,   1.419e+05, 1.201e+05,-6.203e+04,-2.092e+04, -2.826e+04) 

r = ( 3.000e+00,   5.000e+00, 7.000e+00, 1.100e+01, 1.300e+01,   1.700e+01, 1.900e+01, 2.300e+01,  2.900e+01, 3.100e+01, 3.700e+01,   4.100e+01, 4.300e+01, 4.700e+01, 5.300e+01,  5.900e+01) 
u = Mink_Reciprocal(r) = ( 1.746e-02,  -2.715e-02,-2.947e-02,-2.619e-02,-3.017e-02,  -3.789e-02,-1.380e-02, 4.765e-02, -1.666e-02, 4.603e-02,-1.205e-02,  -4.134e-02,-3.498e-02, 1.807e-02, 6.096e-03,  8.233e-03) 

s = r*(1/r) = ( 1.000e+00,   1.041e-17, 3.123e-17, 2.290e-16, 2.776e-17,  -1.717e-16,-3.678e-16, 3.053e-16,  3.192e-16,-1.665e-16, 4.857e-16,   1.492e-16,-1.284e-16, 9.714e-17,-5.551e-17, -1.284e-16) 

Verifying 64 Mink_Determinant preserving Mink_Comp transforms
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Verifying 72 Mink_Determinant preserving Mink_Magic transforms
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
